
Source: https://app.letsdefend.io

In cryptography, there are many criteria for the algorithm to be secure. One of these criteria is related to the randomness of key generation. For a crypto algorithm to be strong in cryptography, it is important that the key is long enough and random. Many random number generator methods have emerged to make the key random.

There are three types of Random Number Generators:

  True Random Number Generators (TRNG)
  Pseudorandom Number Generators (PRNG)
  Cryptographically Secure Pseudorandom Number Generators (CSPRNG)


True Random Generator is a method that generates random numbers based on real physical operations. An example of this type of random number generation is a coin flip or a dice toss.

The Pseudorandom Number Generator method needs an initial random value to ensure randomness. This value is called “seed”. This value can come from the TRNG method. It generates random numbers step by step according to some mathematical calculations over this first value.
Compared to the TRNG method, its application in practice is much easier and faster. But it is not secure and unpredictable enough for use in cryptography.
Ex: sudo echo $RANDOM

Cryptographically Secure Pseudorandom Number Generators (CSPRNG) is an unpredictable variant of PRNG. As in the PRNG method, it is not possible to predict and calculate the next value (0 or 1 bit) to be produced mathematically. The PRNG methods are frequently used in software testing, but CSPRNG is a cryptography-specific method.
Ex: od -An -N2 -i /dev/random

