Take a look at this lab:
https://0xdf.gitlab.io/2019/03/26/htb-october.html
https://0xdf.gitlab.io/2021/03/02/htb-sneaky
https://pencer.io/ctf/ctf-htb-sneaky/

Segmentation fault (core dumped)

For privilege escalation, this program must have SUID privileges.

Check if ASLR is on:
cat /proc/sys/kernel/randomize_va_space

Check also for NX:
checksec <<program>>

Summarizing: You will use gdb to see where the program crashes. Then, adding the function that you want in the treshold (in this case, "system" function to execute "/bin/sh"). The ldd thing is to figure out were in memory is the C function "system" to execute "/bin/sh". Because the vulnerable program runs with suid as root, the /bin/sh will create a new shell with "root" privileges.

gdb program

pattern_create -l 400 (to create random strings)
run <string from pattern_create>
pattern_offset -q <<the string>>
Take the result and check with the above pattern_offset. You just found now where to put the payload.
