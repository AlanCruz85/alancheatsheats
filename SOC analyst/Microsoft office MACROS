
Source: https://systemweakness.com/analyzing-follina-zeroday-cve-2022-30190-5700874f9e31
Note to not forget: " Its also important to keep in mind that a office document is constructed from collection of xml files" (...)
			"document.xml is the main heart of a office document ,but we will be looking at <<<document.xml.rels>>> which is keeps all the metadata about our document file"
			
We can unzip a Microsoft Office Document (word, excel...), or a LibreOffice Document. Brief, those docs uses xml to provide the structure. For instance, the way we see the doc is thanks to the xml. 

Ex: unzip sample.doc 

		Archive:  sample.doc
		  inflating: [Content_Types].xml     
		  inflating: docProps/app.xml        
		  inflating: docProps/core.xml       
		  inflating: word/document.xml       
		  inflating: word/fontTable.xml      
		  inflating: word/settings.xml       
		  inflating: word/styles.xml         
		  inflating: word/webSettings.xml    
		  inflating: word/theme/theme1.xml   
		  inflating: word/_rels/document.xml.rels  
		  inflating: _rels/.rels

****** About template injection: the .rels files are used to connect to a malicious URL
About .rels files: "The .rels files are used to establish connections and dependencies between different parts of the document. For example, they specify which images are linked to the document, which stylesheets are applied, and how different parts of the document are related to each other.
These relationships are crucial for applications like Microsoft Word to properly interpret and render the document content, ensuring that all the necessary components are correctly referenced and displayed."
__________________________________________________________________________________________________________________
1- oleid NameOfFile 
	(get the initial info, if there are VBA macros or XLM macros)
  
2- olevba NameOfFile 
	(for VBA macros)
	olevba --deobf --reveal NameOfFile
		(to deobfuscate the code)
    
3- xlmdeobfuscator -f NameOfFile
	(for xlm macros)
	
If the commands are obfuscated:
	olevba --deobf --reveal invitation.docm << from HTB challenge "Halloween", a very good one to practice understanding basic obfuscation>>
  
If you need more information, you can open the microsoft office files using libreoffice (for instance, to open an Excel file using Calc), because the macros are written using different program languages (NEED TO READ MORE ABOUT THAT, TO BE SURE). This is like doing static analysis.

Last possibility, you can do dynamic analysis.


