
You can use the following tools:

python3 extanalysis.py (very basic static anaysis)
https://deobfuscate.io/ (javascript deobfuscator)

.crx files are extensions for Google Chrome. They are a zip file, so you can extract them.
Them, you can do normal malware analysis.

____________________________________________________________________________________________________________________________________________________

# Interesting JAVASCRIPT functions to pay attention:

Fetch API - Making an HTTP request:

    fetch('https://api.example.com/data')
      .then(response => response.json())
      .then(data => console.log(data))
      .catch(error => console.error(error));
      
XMLHttpRequest - Making an HTTP request:

    var xhr = new XMLHttpRequest();
    xhr.open('GET', 'https://api.example.com/data', true);
    xhr.onreadystatechange = function() {
      if (xhr.readyState === 4 && xhr.status === 200) {
        var response = JSON.parse(xhr.responseText);
        console.log(response);
      }
    };
    xhr.send();
    
Keyboard Event Listener - Detecting key presses:

    document.addEventListener('keydown', function(event) {
      console.log('Key pressed:', event.key);
    });
    
Mouse Event Listener - Detecting mouse clicks:

    document.addEventListener('click', function(event) {
      console.log('Mouse clicked at:', event.clientX, event.clientY);
    });
    
Geolocation API - Retrieving user's current location:

    navigator.geolocation.getCurrentPosition(function(position) {
      console.log('Latitude:', position.coords.latitude);
      console.log('Longitude:', position.coords.longitude);
    });

WebSocket - Establishing a WebSocket connection:

    var socket = new WebSocket('wss://socket.example.com');
    socket.onopen = function() {
      console.log('WebSocket connection established.');
    };
    socket.onmessage = function(event) {
      console.log('Received message:', event.data);
    };
    socket.onerror = function(error) {
      console.error('WebSocket error:', error);
    };
