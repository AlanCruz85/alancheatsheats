

Creating New Session
==========================
<?php
session_start();
/*session is started if you don't write this line can't use $_Session  global variable*/
$_SESSION["newsession"]=$value;
?>
Getting Session
==========================
<?php
session_start();
/*session is started if you don't write this line can't use $_Session  global variable*/
$_SESSION["newsession"]=$value;
/*session created*/
echo $_SESSION["newsession"];
/*session was getting*/
?> 

Can be save, as example:
/var/lib/php/sess_<id>

SOURCE: https://www.php.net/manual/en/ref.session.php
_______________________________________________________________________________________________________________________________________________-

So my attention shifted completely towards discovering a method to achieve arbitrary writes so that ultimately I could gain php level RCE via LFI. I begun examining the /info endpoint (phpinfo’s output) for more clues. I discovered something very interesting:

session.upload_progress.cleanup is set to Off this opens the PHP session file LFI to RCE attack vector. This is because PHP will store its session files with the filenames as sess_<ID> within the following directories:

/tmp/sess_<id>
/tmp/sessions/sess_<id>
/var/lib/php/sess_<id>
/var/lib/php/sessions/sess_<id>
/var/lib/php<version>/sess_<id>
/var/lib/php<version>/sessions/sess_<id>
etc..

And will not delete them directly after writing them, indicating that we can either access the session files via symlinks or we’ll luck out and the session files will be written to the /tmp directory due to the fact that session.auto_start is set to Off:

I used curl to check for the existence of session files via exploiting the method explained in 0x01:

curl http://<IP>:<PORT> — cookie ‘PHPSESSID=test’ -F ‘PHP_SESSION_UPLOAD_PROGRESS=<PHP_CODE>’ -F ‘file=@junk_file’
<PHP_CODE> is where we can inject arbitrary PHP code to achieve php code RCE.

I found nothing initially, I wondered if perhaps the file was being deleted automatically so I copied and pasted both curl commands consecutively to discover that there is indeed session files being automatically removed and to my astonishment a session file appeared:

The request to see the file saved:
curl http://<IP>:<PORT>/miner/../../../../../../../../../../../../../tmp/sess_test



SOURCE: https://d4rkstat1c.medium.com/mr-burns-hackthebox-writeup-c06f90a22fa9
